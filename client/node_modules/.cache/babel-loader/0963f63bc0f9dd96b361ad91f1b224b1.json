{"ast":null,"code":"var _jsxFileName = \"/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/checkout/Checkout.jsx\";\nimport 'rc-input-number/assets/index.css';\nimport { Button, Modal } from 'react-bootstrap';\nimport { CartEntry } from 'src/components/checkout/CartEntry';\nimport React from 'react';\nimport { cartOps } from 'src/components/Dashboard';\nimport io from 'socket.io-client';\nexport class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteItem = orderItem => {\n      this.props.updateCart(orderItem, cartOps.DELETE);\n    };\n\n    this.handleQuantityChange = (orderItem, newQuantity) => {\n      orderItem.quantity = Math.max(1, newQuantity);\n      this.props.updateCart(orderItem, cartOps.UPDATE);\n    };\n\n    this.socket = io.connect('http://127.0.0.1:5000/customer');\n  }\n\n  componentDidMount() {\n    this.socket.on('orderReceived', data => {\n      console.log('Received your order!');\n      console.log(data);\n    });\n  }\n\n  getTotal() {\n    let total = 0;\n    this.props.cart.forEach(item => {\n      total += item.menu_item.price * item.quantity;\n    });\n    return total;\n  }\n\n  render() {\n    const {\n      cart,\n      handleOrderCart,\n      show,\n      onHide\n    } = this.props;\n    let entries = cart.size > 0 && [...cart.values()].map((item, i) => React.createElement(CartEntry, {\n      handleDeleteItem: this.handleDeleteItem,\n      handleQuantityChange: this.handleQuantityChange,\n      key: i,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n    return React.createElement(Modal, {\n      className: \"overlay-cart\",\n      show: show,\n      onHide: onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      className: \"overlay-closebtn\",\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Cart\")), entries.length > 0 ? React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, entries, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Total:\")), React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"$ \", this.getTotal().toFixed(2)))), React.createElement(Button, {\n      className: \"overlay-button\",\n      align: \"center\",\n      onClick: handleOrderCart,\n      disabled: entries.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Order Now\"))) : React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Your cart is currently empty. Check out our menu and add some items!\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/checkout/Checkout.jsx"],"names":["Button","Modal","CartEntry","React","cartOps","io","Checkout","Component","constructor","props","handleDeleteItem","orderItem","updateCart","DELETE","handleQuantityChange","newQuantity","quantity","Math","max","UPDATE","socket","connect","componentDidMount","on","data","console","log","getTotal","total","cart","forEach","item","menu_item","price","render","handleOrderCart","show","onHide","entries","size","values","map","i","length","display","flex","textAlign","toFixed"],"mappings":"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","sourcesContent":["import 'rc-input-number/assets/index.css';\n\nimport { Button, Modal } from 'react-bootstrap';\n\nimport { CartEntry } from 'src/components/checkout/CartEntry';\nimport React from 'react';\nimport { cartOps } from 'src/components/Dashboard';\nimport io from 'socket.io-client';\n\nexport class Checkout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.socket = io.connect('http://127.0.0.1:5000/customer');\n    }\n\n    componentDidMount() {\n        this.socket.on('orderReceived', (data) => {\n            console.log('Received your order!');\n            console.log(data);\n        });\n    }\n\n    getTotal() {\n        let total = 0;\n        this.props.cart.forEach(item => {\n            total += item.menu_item.price * item.quantity;\n        });\n        return total;\n    }\n\n    handleDeleteItem = (orderItem) => {\n        this.props.updateCart(orderItem, cartOps.DELETE);\n    }\n\n    handleQuantityChange = (orderItem, newQuantity) => {\n        orderItem.quantity = Math.max(1, newQuantity);\n        this.props.updateCart(orderItem, cartOps.UPDATE);\n    }\n\n    render() {\n        const { cart, handleOrderCart, show, onHide } = this.props;\n        let entries = cart.size > 0 && \n                      [...cart.values()].map((item, i) => <CartEntry handleDeleteItem={this.handleDeleteItem} handleQuantityChange={this.handleQuantityChange} key={i} item={item} />);\n\n        return (\n            <Modal\n                className=\"overlay-cart\"\n                show={show}\n                onHide={onHide}\n            >\n                <Modal.Header className='overlay-closebtn' closeButton>\n                    <h1>Cart</h1>\n                </Modal.Header>\n                {entries.length > 0 ?\n                <Modal.Body>\n                    <div>\n                        {entries}\n                        <br />\n                        <div style={{ display: 'flex' }}>\n                            <div style={{ flex: 1 }}>\n                                <h4>Total:</h4>\n                            </div>\n                            <div style={{ flex: 1, textAlign: 'right' }}>\n                                <h4>$ {this.getTotal().toFixed(2)}</h4>\n                            </div>\n                        </div>\n                        <Button \n                            className='overlay-button'\n                            align='center' \n                            onClick={handleOrderCart}\n                            disabled={entries.length === 0}\n                        >\n                            Order Now\n                        </Button>\n                    </div>\n                </Modal.Body> :\n                <Modal.Body>\n                    <p>Your cart is currently empty. Check out our menu and add some items!</p>\n                </Modal.Body>\n                }\n            </Modal>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}