{"ast":null,"code":"import { axios } from './helper';\nimport { navigate } from '@reach/router';\nconst BASE_URL = 'http://127.0.0.1:5000';\nexport class Requests {\n  // #region Auth Requests\n  static async login(email, password) {\n    try {\n      const loginRequest = await axios({\n        method: 'post',\n        url: BASE_URL + '/auth/login',\n        data: {\n          email: email,\n          password: password\n        }\n      });\n      return loginRequest.data;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  static async logout(sessionId) {\n    try {\n      localStorage.clear();\n      const logoutRequest = await axios({\n        method: 'patch',\n        url: BASE_URL + '/auth/logout',\n        data: {\n          session_id: sessionId\n        }\n      });\n      navigate('/');\n      return logoutRequest.data;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  static async register(name, email, password) {\n    try {\n      const result = await axios({\n        method: 'post',\n        url: BASE_URL + '/auth/signup',\n        data: {\n          name: name,\n          email: email,\n          password: password\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error(err);\n      alert('Missing required fields');\n      navigate('/register');\n    }\n  }\n\n  static async getAuth(apiKey) {\n    try {\n      const allSession = await axios({\n        method: 'get',\n        url: BASE_URL + '/auth',\n        headers: {\n          'X-API-KEY': apiKey\n        }\n      });\n      return allSession.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n  // #region Menu Requests\n\n\n  static async getMenu() {\n    try {\n      const menu = await axios({\n        method: 'get',\n        url: BASE_URL + '/menu'\n      });\n      return menu.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async getRecommendation() {\n    try {\n      const menu = await axios({\n        method: 'get',\n        url: BASE_URL + '/menu/recommendations'\n      });\n      return menu.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n  // #region Profile Requests\n\n\n  static async getUser(userId) {\n    try {\n      const userRequest = await axios({\n        method: 'get',\n        url: BASE_URL + '/auth/user/' + userId\n      });\n      return userRequest.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async getPastOrders(userId) {\n    try {\n      const result = await axios({\n        method: 'get',\n        url: BASE_URL + '/auth/user/' + userId + '/past-orders'\n      });\n      return result.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n  // #region Table and Order Requests\n\n\n  static async getTable(tableId) {\n    try {\n      const result = await axios({\n        method: 'get',\n        url: BASE_URL + '/table/' + tableId,\n        header: {\n          \"x-api-key\": sessionStorage.getItem('AUTH_KEY')\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async addOrder(sessionId, order) {\n    try {\n      const request = await axios({\n        method: 'post',\n        url: BASE_URL + '/session/' + sessionId,\n        data: order\n      });\n      return request.data.inserted._id;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async closeOrder(sessionId) {\n    try {\n      const request = await axios({\n        method: 'patch',\n        url: BASE_URL + '/session/' + sessionId\n      });\n      return request.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async sendReceipt(sessionId) {\n    // Close session and send receipt to user\n    try {\n      const receiptRequest = await axios({\n        method: 'post',\n        url: BASE_URL + '/session/receipt',\n        data: {\n          'session_id': sessionId\n        }\n      });\n      return receiptRequest.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async toggleCallWaiter(tableId) {\n    try {\n      // Toggle the call waiter in the backend\n      const waiterReq = await axios({\n        method: 'patch',\n        url: BASE_URL + '/table/waiter/' + tableId\n      });\n      return waiterReq.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n  // #region Session Requests\n\n\n  static async getSession(sessionId) {\n    try {\n      const sessionRequest = await axios({\n        method: 'get',\n        url: BASE_URL + '/session/' + sessionId\n      });\n      return sessionRequest.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async makeSession(tableId, userId) {\n    try {\n      const sessionRequest = await axios({\n        method: 'post',\n        url: BASE_URL + '/session',\n        data: {\n          // TODO: Insert Table ID here later from query string\n          'table_id': tableId,\n          'user_id': userId ? userId : 'Guest'\n        }\n      });\n      const sessionId = sessionRequest.data.session_id;\n      localStorage.setItem('sessionId', sessionId);\n      return sessionId;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n  // #region Reviews Requests\n\n\n  static async getReviewsZomato() {\n    try {\n      const reviews = await axios({\n        method: 'get',\n        url: BASE_URL + '/review/zomato'\n      });\n      return reviews.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async getReviews() {\n    try {\n      const reviews = await axios({\n        method: 'get',\n        url: BASE_URL + '/review'\n      });\n      return reviews.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async postReview(user, review, rating) {\n    try {\n      const reviews = await axios({\n        method: 'post',\n        url: BASE_URL + '/review',\n        data: {\n          \"user\": user,\n          \"review\": review,\n          \"rating\": rating\n        }\n      });\n      return reviews.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async postReply(user, review, reviewId) {\n    try {\n      const reviews = await axios({\n        method: 'post',\n        url: BASE_URL + '/review/' + reviewId,\n        data: {\n          \"user\": user,\n          \"reply\": review\n        }\n      });\n      return reviews.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async deleteReview(reviewId) {\n    try {\n      const reviews = await axios({\n        method: 'delete',\n        url: BASE_URL + '/review/' + reviewId\n      });\n      return reviews.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async addFoodReview(menuItemId, user, rating, comment) {\n    try {\n      const result = await axios({\n        method: 'post',\n        url: BASE_URL + '/menu/review/' + menuItemId,\n        data: {\n          user: user,\n          rating: rating,\n          comment: comment\n        }\n      });\n      console.log(result.data.inserted);\n      return result.data.inserted;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async deleteFoodReview(menuItemId, reviewId) {\n    try {\n      const result = await axios({\n        method: 'delete',\n        url: BASE_URL + '/menu/review/' + menuItemId,\n        data: {\n          _id: reviewId\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n  // #region Reservation Requests\n\n\n  static async getReservation() {\n    try {\n      const reservation = await axios({\n        method: 'get',\n        url: BASE_URL + '/reservation'\n      });\n      return reservation.data;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async makeReservation(data) {\n    try {\n      const result = await axios({\n        method: 'post',\n        url: BASE_URL + '/reservation',\n        data: {\n          \"email\": data.email,\n          \"datetime\": data.datetime.toString(),\n          \"number_diner\": data.diner,\n          \"reservation_notes\": data.notes\n        },\n        header: {\n          \"Content-Type\": \"application/json\",\n          \"x-api-key\": sessionStorage.getItem('AUTH_KEY')\n        }\n      });\n      return result;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async sendReservationEmail(reservationId) {\n    try {\n      const result = await axios({\n        method: 'post',\n        url: BASE_URL + '/reservation/email',\n        data: {\n          \"reservation_id\": reservationId\n        },\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return result;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async getAvailability(year, month, date, number_diner) {\n    try {\n      const result = await axios({\n        method: 'post',\n        url: BASE_URL + '/reservation/availability',\n        data: {\n          date: year + \"-\" + month + \"-\" + date,\n          number_diner: number_diner\n        },\n        header: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return result;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  }\n\n  static async cancelReservation(reservationId) {\n    try {\n      const result = await axios({\n        method: 'delete',\n        url: BASE_URL + '/reservation/' + reservationId,\n        header: {\n          \"x-api-key\": localStorage.getItem('sessionId'),\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return result;\n    } catch (err) {\n      console.error(err);\n      localStorage.removeItem('sessionId');\n      navigate('/home');\n    }\n  } // #endregion\n\n\n}","map":{"version":3,"sources":["/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/utilities/Requests.js"],"names":["axios","navigate","BASE_URL","Requests","login","email","password","loginRequest","method","url","data","err","console","error","logout","sessionId","localStorage","clear","logoutRequest","session_id","register","name","result","alert","getAuth","apiKey","allSession","headers","removeItem","getMenu","menu","getRecommendation","getUser","userId","userRequest","getPastOrders","getTable","tableId","header","sessionStorage","getItem","addOrder","order","request","inserted","_id","closeOrder","sendReceipt","receiptRequest","toggleCallWaiter","waiterReq","getSession","sessionRequest","makeSession","setItem","getReviewsZomato","reviews","getReviews","postReview","user","review","rating","postReply","reviewId","deleteReview","addFoodReview","menuItemId","comment","log","deleteFoodReview","getReservation","reservation","makeReservation","datetime","toString","diner","notes","sendReservationEmail","reservationId","getAvailability","year","month","date","number_diner","cancelReservation"],"mappings":"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","sourcesContent":["import { axios } from './helper';\nimport { navigate } from '@reach/router';\n\nconst BASE_URL = 'http://127.0.0.1:5000';\n\nexport class Requests {\n    // #region Auth Requests\n    static async login(email, password) {\n        try {\n            const loginRequest = await axios({\n                method: 'post',\n                url: BASE_URL + '/auth/login',\n                data: {\n                    email: email,\n                    password: password\n                }\n            });\n            return loginRequest.data;\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    static async logout(sessionId) {\n        try {\n            localStorage.clear();\n            const logoutRequest = await axios({\n                method: 'patch',\n                url: BASE_URL + '/auth/logout',\n                data: {\n                    session_id: sessionId\n                }\n            });\n            navigate('/');\n            return logoutRequest.data;\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    static async register(name, email, password) {\n        try {\n            const result = await axios({\n                method: 'post',\n                url: BASE_URL + '/auth/signup',\n                data: {\n                    name: name,\n                    email: email,\n                    password: password\n                }\n            });\n            return result.data;\n        } catch (err) {\n            console.error(err);\n            alert('Missing required fields');\n            navigate('/register');\n        }\n    }\n    \n    static async getAuth(apiKey) {\n        try {\n            const allSession = await axios ({\n                method: 'get',\n                url: BASE_URL + '/auth',\n                headers: {\n                    'X-API-KEY': apiKey\n                }\n            });\n            return allSession.data;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n\n    // #region Menu Requests\n    static async getMenu() {\n        try {\n            const menu = await axios ({\n                method: 'get',\n                url: BASE_URL + '/menu'\n            });\n            return menu.data;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async getRecommendation() {\n        try {\n            const menu = await axios ({\n                method: 'get',\n                url: BASE_URL + '/menu/recommendations'\n            });\n            return menu.data;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n\n    // #region Profile Requests\n    static async getUser(userId) {\n        try {\n            const userRequest = await axios({\n                method: 'get',\n                url: BASE_URL + '/auth/user/' + userId\n            });\n            return userRequest.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async getPastOrders(userId) {\n        try {\n            const result = await axios({\n                method: 'get',\n                url: BASE_URL + '/auth/user/' + userId + '/past-orders',\n            });\n            return result.data;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n\n    // #region Table and Order Requests\n    static async getTable(tableId) {\n        try {\n            const result = await axios({\n                method: 'get',\n                url: BASE_URL + '/table/' + tableId,\n                header: {\n                    \"x-api-key\": sessionStorage.getItem('AUTH_KEY'),\n                }\n            });\n            return result.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async addOrder(sessionId, order) {\n        try {\n            const request = await axios({\n                method: 'post',\n                url: BASE_URL + '/session/' + sessionId,\n                data: order\n            });\n            return request.data.inserted._id;\n        } catch(err) {\n            console.error(err)\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async closeOrder(sessionId) {\n        try {\n            const request = await axios({\n                method: 'patch',\n                url: BASE_URL + '/session/' + sessionId\n            });\n            return request.data;\n        } catch(err) {\n            console.error(err)\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async sendReceipt(sessionId) {\n        // Close session and send receipt to user\n        try {\n            const receiptRequest = await axios({\n                method: 'post',\n                url: BASE_URL + '/session/receipt',\n                data: { \n                    'session_id': sessionId\n                }\n            });\n            return receiptRequest.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async toggleCallWaiter(tableId) {\n        try {\n            // Toggle the call waiter in the backend\n            const waiterReq = await axios({\n                method: 'patch',\n                url: BASE_URL + '/table/waiter/' + tableId,\n            });\n            return waiterReq.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n\n    // #region Session Requests\n    static async getSession(sessionId) {\n        try {\n            const sessionRequest = await axios({\n                method: 'get',\n                url: BASE_URL + '/session/' + sessionId\n            });\n            return sessionRequest.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async makeSession(tableId, userId) {\n        try {\n            const sessionRequest = await axios({\n                method: 'post',\n                url: BASE_URL + '/session',\n                data: {\n                    // TODO: Insert Table ID here later from query string\n                    'table_id': tableId,\n                    'user_id': userId ? userId : 'Guest',\n                }\n            });\n            const sessionId = sessionRequest.data.session_id;\n            localStorage.setItem('sessionId', sessionId);\n            return sessionId;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n\n    // #region Reviews Requests\n    static async getReviewsZomato() {\n        try {\n            const reviews = await axios({\n                method: 'get',\n                url: BASE_URL + '/review/zomato'\n            });\n            return reviews.data;\n\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async getReviews() {\n        try {\n            const reviews = await axios({\n                method: 'get',\n                url: BASE_URL + '/review'\n            });\n            return reviews.data;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async postReview(user, review, rating) {\n        try {\n            const reviews = await axios({\n                method: 'post',\n                url: BASE_URL + '/review',\n                data: {\n                    \"user\": user,\n                    \"review\": review,\n                    \"rating\": rating\n                }\n            });\n            return reviews.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async postReply(user, review, reviewId) {\n        try {\n            const reviews = await axios({\n                method: 'post',\n                url: BASE_URL + '/review/' + reviewId,\n                data: {\n                    \"user\": user,\n                    \"reply\": review,\n                }\n            });\n            return reviews.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async deleteReview(reviewId) {\n        try {\n            const reviews = await axios({\n                method: 'delete',\n                url: BASE_URL + '/review/' + reviewId\n            });\n            return reviews.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async addFoodReview(menuItemId, user, rating, comment) {\n        try {\n            const result = await axios({\n                method: 'post',\n                url: BASE_URL + '/menu/review/' + menuItemId,\n                data: { \n                    user: user,\n                    rating: rating,\n                    comment: comment\n                }\n            });\n            console.log(result.data.inserted);\n            return result.data.inserted;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async deleteFoodReview(menuItemId, reviewId) {\n        try {\n            const result = await axios({\n                method: 'delete',\n                url: BASE_URL + '/menu/review/' + menuItemId,\n                data: { \n                    _id: reviewId\n                }\n            });\n            return result.data;\n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n    \n    // #region Reservation Requests\n    static async getReservation() {\n        try {\n            const reservation = await axios({\n                method: 'get',\n                url: BASE_URL + '/reservation',\n            });\n            return reservation.data;\n        } catch(err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async makeReservation(data) {\n        try {\n            const result = await axios({\n                method: 'post',\n                url: BASE_URL + '/reservation',\n                data: {\n                    \"email\": data.email,\n                    \"datetime\": data.datetime.toString(),\n                    \"number_diner\": data.diner,\n                    \"reservation_notes\": data.notes\n                },\n                header: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-api-key\": sessionStorage.getItem('AUTH_KEY'),\n                }\n            });\n            return result; \n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async sendReservationEmail(reservationId) {\n        try {\n            const result = await axios({\n                method: 'post',\n                url: BASE_URL + '/reservation/email',\n                data: {\n                    \"reservation_id\": reservationId,\n                },\n                header: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            return result; \n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async getAvailability(year, month, date, number_diner) {\n        try {\n            const result = await axios({\n                method: 'post',\n                url: BASE_URL + '/reservation/availability',\n                data: {\n                    date: year+\"-\"+month+\"-\"+date,\n                    number_diner: number_diner,\n                },\n                header: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            return result; \n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n\n    static async cancelReservation(reservationId) {\n        try {\n            const result = await axios({\n                method: 'delete',\n                url: BASE_URL + '/reservation/' + reservationId,\n                header: {\n                    \"x-api-key\": localStorage.getItem('sessionId'),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            return result; \n        } catch (err) {\n            console.error(err);\n            localStorage.removeItem('sessionId');\n            navigate('/home');\n        }\n    }\n    // #endregion\n}"]},"metadata":{},"sourceType":"module"}