{"ast":null,"code":"var _jsxFileName = \"/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/profile/PastOrders.jsx\";\nimport 'rc-input-number/assets/index.css';\nimport 'src/styles/styles.css';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\nimport { OrderHelper } from 'src/components/order/OrderHelper';\nimport React from 'react';\nimport { Requests } from 'src/utilities/Requests';\nexport class PastOrders extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const userId = await this.getUserId();\n      const orders = await this.getPastOrders(userId);\n      this.setState({\n        orders: orders\n      });\n    };\n\n    this.getUserId = async () => {\n      const sessionId = localStorage.getItem('sessionId');\n      const session = await Requests.getSession(sessionId);\n      const allSession = await Requests.getAuth(sessionId);\n      let userId = \"\";\n      allSession && allSession.forEach(async sess => {\n        if (sess._id === session.user_id) {\n          this.setState({\n            userId: sess._id\n          });\n          userId = sess._id;\n          return;\n        }\n      });\n      return userId;\n    };\n\n    this.getPastOrders = async userId => {\n      return await Requests.getPastOrders(this.state.userId);\n    };\n\n    this.getOrderCard = () => {\n      let res = [];\n      this.state.orders && this.state.orders.forEach((item, index) => {\n        let datetime = item.timestamp ? item.timestamp.split(\"T\") : \"\";\n        let date = datetime[0];\n        let time = datetime[1].substring(0, 8);\n        let timestamp = item.timestamp ? \"Made on \" + date + \" at \" + time : \"\";\n        let card = React.createElement(Card, {\n          key: index,\n          className: \"order-card\",\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Order\"), React.createElement(Card.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"#\", item._id), React.createElement(Card.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, timestamp)), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Table, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Quantity\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Price\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, item.order_items.map((orderItem, j) => {\n          return React.createElement(\"tr\", {\n            key: j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, orderItem.quantity), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, orderItem.menu_item.name), React.createElement(Card.Text, {\n            className: \"order-notes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, orderItem.notes)), React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"$\", orderItem.menu_item.price));\n        }))), React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Total: $\", OrderHelper.getTotal(item))));\n        res.push(card);\n      });\n      return res;\n    };\n\n    this.state = {\n      userId: '',\n      orders: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"orders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"past-orders\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Past Orders\"), this.state.orders.length === 0 && React.createElement(\"h5\", {\n      className: \"profile-email\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"No past orders.\"), this.state.orders && this.getOrderCard())));\n  }\n\n}","map":{"version":3,"sources":["/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/profile/PastOrders.jsx"],"names":["Card","Col","Row","Table","OrderHelper","React","Requests","PastOrders","Component","constructor","props","componentDidMount","userId","getUserId","orders","getPastOrders","setState","sessionId","localStorage","getItem","session","getSession","allSession","getAuth","forEach","sess","_id","user_id","state","getOrderCard","res","item","index","datetime","timestamp","split","date","time","substring","card","width","order_items","map","orderItem","j","quantity","menu_item","name","notes","price","getTotal","push","render","length"],"mappings":"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","sourcesContent":["import 'rc-input-number/assets/index.css';\nimport 'src/styles/styles.css';\n\nimport { Card, Col, Row, Table } from 'react-bootstrap';\n\nimport { OrderHelper } from 'src/components/order/OrderHelper';\nimport React from 'react';\nimport { Requests } from 'src/utilities/Requests';\n\nexport class PastOrders extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userId: '',\n            orders: [],\n        }\n    }\n\n    componentDidMount = async () => {\n        const userId = await this.getUserId();\n        const orders = await this.getPastOrders(userId);\n        this.setState({ orders: orders });\n    }\n\n    getUserId = async () => {\n        const sessionId = localStorage.getItem('sessionId');\n        const session = await Requests.getSession(sessionId);\n        const allSession = await Requests.getAuth(sessionId);\n        let userId = \"\";\n        allSession && allSession.forEach(async (sess) => {\n            if (sess._id === session.user_id) {\n                this.setState({ userId: sess._id });\n                userId = sess._id;\n                return;\n            }\n        })\n        return userId;\n    }\n    getPastOrders = async (userId) => {\n        return await Requests.getPastOrders(this.state.userId);\n    }\n\n    getOrderCard = () => {\n\n\n        let res = [];\n        this.state.orders && this.state.orders.forEach((item, index) => {\n\n            let datetime = item.timestamp ? item.timestamp.split(\"T\") : \"\";\n            let date = datetime[0];\n            let time = datetime[1].substring(0, 8);\n\n            let timestamp = item.timestamp ? \"Made on \" + date + \" at \" + time : \"\";\n            let card = (\n                <Card key={index} className=\"order-card\" style={{ width: '100%' }}>\n                    <Card.Header>\n                        <Card.Title>Order</Card.Title>\n                        <Card.Subtitle>#{item._id}</Card.Subtitle>\n                        <Card.Subtitle>{timestamp}</Card.Subtitle>\n\n                    </Card.Header>\n                    <Card.Body>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>Quantity</th>\n                                    <th>Name</th>\n                                    <th>Price</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {item.order_items.map((orderItem, j) => {\n                                    return (<tr key={j}>\n                                        <th>{orderItem.quantity}</th>\n                                        <th>\n                                            <Card.Title>\n                                                {orderItem.menu_item.name}\n                                            </Card.Title>\n                                            <Card.Text className=\"order-notes\">\n                                                {orderItem.notes}\n                                            </Card.Text>\n                                        </th>\n                                        <th>${orderItem.menu_item.price}</th>\n                                    </tr>)\n                                })}\n                            </tbody>\n                        </Table>\n                        <Card.Title>Total: ${OrderHelper.getTotal(item)}</Card.Title>\n                    </Card.Body>\n                </Card>\n            );\n            res.push(card)\n        })\n        return res;\n    }\n\n\n    render() {\n        return (\n            <div className=\"orders\">\n                <Row>\n                    <Col>\n                        <h2 className=\"past-orders\" align=\"center\">Past Orders</h2>\n                        {this.state.orders.length === 0 &&\n                            <h5 className=\"profile-email\" align=\"center\">No past orders.</h5>}\n                        {this.state.orders && this.getOrderCard()}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}