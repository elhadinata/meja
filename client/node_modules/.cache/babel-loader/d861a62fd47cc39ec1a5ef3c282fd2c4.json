{"ast":null,"code":"var _jsxFileName = \"/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/reservation/Reservation.jsx\";\nimport 'src/styles/styles.css';\nimport 'src/styles/react-datetime.css';\nimport React from 'react';\nimport { Requests } from 'src/utilities/Requests';\nimport { ReservationConfirmation } from 'src/components/reservation/ReservationConfirmation';\nimport { ReservationForm } from 'src/components/reservation/ReservationForm';\nimport { _ } from 'src/utilities/helper';\nexport class Reservation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await this.getEmail();\n      const reservationList = await this.getReservationList();\n      await this.getCurrentReservation(reservationList);\n    };\n\n    this.getReservationList = async () => {\n      const reservationList = await Requests.getReservation();\n      return reservationList;\n    };\n\n    this.getCurrentReservation = async reservationList => {\n      console.log(reservationList);\n\n      if (reservationList.result !== \"No Reservation\") {\n        reservationList.forEach(reservation => {\n          console.log(reservation);\n\n          if (reservation.email === this.state.email) {\n            this.setState({\n              reservation: reservation\n            });\n            this.setState({\n              reserved: true\n            });\n            return;\n          }\n        });\n      }\n    };\n\n    this.getEmail = async () => {\n      const sessionId = localStorage.getItem('sessionId');\n      const session = await Requests.getSession(sessionId);\n      const user = await Requests.getUser(session.user_id);\n      user && this.setState({\n        email: user.email\n      });\n    };\n\n    this.handleCancel = async () => {\n      let id = _.get(this.state.reservation, \"_id\", \"\");\n\n      await Requests.cancelReservation(id);\n      window.location.reload();\n    };\n\n    this.switchToConfirmation = () => {\n      this.setState({\n        reserved: true\n      });\n    };\n\n    this.switchToForm = () => {\n      this.setState({\n        reserved: false\n      });\n    };\n\n    this.getContainer = state => {\n      if (state.reserved === false) {\n        const reservationFormProps = {\n          email: this.state.email,\n          showLogin: this.props.showLogin\n        };\n        return React.createElement(ReservationForm, Object.assign({}, reservationFormProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      } else {\n        const numPeople = _.get(state.reservation, \"number_diner\", \"\");\n\n        const datetime = _.get(state.reservation, \"datetime\", \"\").split(\"T\");\n\n        const email = _.get(state.reservation, \"email\", \"\");\n\n        const date = datetime[0];\n        const time = datetime[1];\n        const reservationConfirmationProps = {\n          numPeople: numPeople,\n          date: date,\n          time: time,\n          email: email,\n          dialogProps: {\n            cancelReservation: this.handleCancel\n          }\n        };\n        return React.createElement(ReservationConfirmation, Object.assign({}, reservationConfirmationProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.state = {\n      reserved: false,\n      showDialog: false,\n      email: \"\",\n      reservation: {},\n      reservationList: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.getContainer(this.state));\n  }\n\n}","map":{"version":3,"sources":["/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/reservation/Reservation.jsx"],"names":["React","Requests","ReservationConfirmation","ReservationForm","_","Reservation","Component","constructor","props","componentDidMount","getEmail","reservationList","getReservationList","getCurrentReservation","getReservation","console","log","result","forEach","reservation","email","state","setState","reserved","sessionId","localStorage","getItem","session","getSession","user","getUser","user_id","handleCancel","id","get","cancelReservation","window","location","reload","switchToConfirmation","switchToForm","getContainer","reservationFormProps","showLogin","numPeople","datetime","split","date","time","reservationConfirmationProps","dialogProps","showDialog","render"],"mappings":"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","sourcesContent":["import 'src/styles/styles.css';\nimport 'src/styles/react-datetime.css';\n\nimport React from 'react';\nimport { Requests } from 'src/utilities/Requests';\nimport { ReservationConfirmation } from 'src/components/reservation/ReservationConfirmation';\nimport { ReservationForm } from 'src/components/reservation/ReservationForm';\nimport { _ } from 'src/utilities/helper';\nexport class Reservation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reserved: false,\n            showDialog: false,\n            email: \"\",\n            reservation: {},\n            reservationList: []\n        }\n    }\n\n    componentDidMount = async () => {\n        await this.getEmail();\n        const reservationList = await this.getReservationList()\n        await this.getCurrentReservation(reservationList);        \n    }\n\n    getReservationList = async () => {\n        const reservationList = await Requests.getReservation();\n        return reservationList;\n    }\n\n    getCurrentReservation = async (reservationList) => {\n        console.log(reservationList);\n        if (reservationList.result !== \"No Reservation\") {\n            reservationList.forEach((reservation) => {\n                console.log(reservation);\n                if(reservation.email === this.state.email) {\n                    this.setState({ reservation: reservation });\n                    this.setState({ reserved: true });\n                    return;\n                }\n            });\n        }\n    }\n\n    getEmail = async () => {\n        const sessionId = localStorage.getItem('sessionId');\n        const session = await Requests.getSession(sessionId);\n        const user = await Requests.getUser(session.user_id);\n        user && this.setState({ email: user.email });\n        \n    }\n\n    handleCancel = async () => {\n        let id = _.get(this.state.reservation, \"_id\", \"\");\n        await Requests.cancelReservation(id);\n        window.location.reload();\n    }\n\n    switchToConfirmation = () => {\n        this.setState({ reserved: true });\n    }\n\n\n    switchToForm = () => {\n        this.setState({ reserved: false });\n    }\n\n\n    getContainer = (state) => {\n        if(state.reserved === false) {\n            const reservationFormProps = {\n                email: this.state.email,\n                showLogin: this.props.showLogin,\n            }\n            return (\n                <ReservationForm {...reservationFormProps}/>\n            );\n        } else {\n            const numPeople = _.get(state.reservation, \"number_diner\", \"\");\n            const datetime = _.get(state.reservation, \"datetime\", \"\").split(\"T\");\n            const email = _.get(state.reservation, \"email\", \"\");\n            const date = datetime[0];\n            const time = datetime[1];\n\n            const reservationConfirmationProps = {\n                numPeople: numPeople,\n                date: date,\n                time: time,\n                email: email,\n                dialogProps : {\n                    cancelReservation: this.handleCancel,\n                },\n            }\n            return (\n                <ReservationConfirmation {...reservationConfirmationProps}/>\n            );\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                {this.getContainer(this.state)}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}