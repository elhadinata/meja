{"ast":null,"code":"var _jsxFileName = \"/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/about/CustomerReview.jsx\";\nimport { Col, Row } from 'react-bootstrap';\nimport React from 'react';\nimport { Requests } from 'src/utilities/Requests';\nimport { ReviewCard } from 'src/components/about/ReviewCard';\nimport { ReviewForm } from 'src/components/about/ReviewForm';\nexport const BASE_INDEX_NUM = 1000;\nexport class CustomerReview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await this.getEmail();\n      await this.getReviews();\n    };\n\n    this.getEmail = async () => {\n      const sessionId = localStorage.getItem('sessionId');\n      const session = await Requests.getSession(sessionId);\n      const user = await Requests.getUser(session.user_id);\n      user && this.setState({\n        email: user.email\n      });\n    };\n\n    this.getReviews = async () => {\n      try {\n        const reviews = await Requests.getReviews();\n        this.setState({\n          review: reviews.reverse()\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    this.getReviewCard = () => {\n      let res = [];\n      this.state.review && this.state.review.forEach((item, index) => {\n        console.log(item);\n        const reviewCardProps = {\n          item: item,\n          email: this.state.email,\n          removeReview: reviewId => this.removeReview(reviewId),\n          addReview: () => this.addReview()\n        };\n        res.push(React.createElement(ReviewCard, Object.assign({\n          key: index\n        }, reviewCardProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })));\n      });\n      return res;\n    };\n\n    this.addReview = async () => {\n      this.setState({\n        review: []\n      });\n      await this.getReviews();\n    };\n\n    this.removeReview = async () => {\n      this.setState({\n        review: []\n      });\n      await this.getReviews();\n    };\n\n    this.state = {\n      review: [],\n      email: \"\"\n    };\n  }\n\n  render() {\n    const reviewFormProps = {\n      addReview: data => this.addReview(data)\n    };\n    return React.createElement(\"div\", {\n      className: \"bottom-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"zomato-review--title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Customer Feedback\"))), React.createElement(ReviewForm, Object.assign({\n      email: this.state.email\n    }, reviewFormProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), this.getReviewCard(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/about/CustomerReview.jsx"],"names":["Col","Row","React","Requests","ReviewCard","ReviewForm","BASE_INDEX_NUM","CustomerReview","Component","constructor","props","componentDidMount","getEmail","getReviews","sessionId","localStorage","getItem","session","getSession","user","getUser","user_id","setState","email","reviews","review","reverse","err","console","error","getReviewCard","res","state","forEach","item","index","log","reviewCardProps","removeReview","reviewId","addReview","push","render","reviewFormProps","data"],"mappings":"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","sourcesContent":["import {\n    Col,\n    Row\n} from 'react-bootstrap';\n\nimport React from 'react';\nimport { Requests } from 'src/utilities/Requests';\nimport { ReviewCard } from 'src/components/about/ReviewCard';\nimport { ReviewForm } from 'src/components/about/ReviewForm';\n\nexport const BASE_INDEX_NUM = 1000;\nexport class CustomerReview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            review: [],\n            email: \"\",\n        }\n    }\n        \n    componentDidMount = async () => {\n        await this.getEmail();\n        await this.getReviews();\n    }\n\n    getEmail = async () => {\n        const sessionId = localStorage.getItem('sessionId');\n        const session = await Requests.getSession(sessionId);\n        const user = await Requests.getUser(session.user_id);\n        user && this.setState({ email: user.email });    \n    }\n\n\n\n    getReviews = async () => {\n        try {\n            const reviews = await Requests.getReviews();\n            this.setState({ review: reviews.reverse() });\n        } catch(err) {\n            console.error(err);\n        }\n    }\n\n    getReviewCard = () => {\n        \n        let res = [];\n        this.state.review && this.state.review.forEach((item, index) =>  {\n            console.log(item);\n            const reviewCardProps = {\n                item: item,\n                email: this.state.email,\n                removeReview: (reviewId) => this.removeReview(reviewId),\n                addReview : () => this.addReview(),\n            }\n            res.push(<ReviewCard key={index} {...reviewCardProps}/>);\n    \n        });\n        return res;\n    }\n\n    addReview = async () => {\n        this.setState({ review: [] })\n        await this.getReviews();\n        \n    }\n\n    removeReview = async () => {\n        this.setState({ review: [] })\n        await this.getReviews();\n    }\n\n    render () {\n        const reviewFormProps = {\n            addReview: (data) => this.addReview(data),\n            \n        }\n        return (\n            <div className=\"bottom-up\">\n                <Row className=\"zomato-review--title\">\n                    <Col> <h3> Customer Feedback</h3></Col>\n                </Row>\n                <ReviewForm email={this.state.email} {...reviewFormProps}/>\n                {this.getReviewCard()}\n                <br/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}