{"ast":null,"code":"var _jsxFileName = \"/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/about/ReviewCard.jsx\";\nimport { Button, Card, Col, Row } from 'react-bootstrap';\nimport React from 'react';\nimport { ReplyForm } from 'src/components/about/ReplyForm';\nimport { Requests } from 'src/utilities/Requests';\nimport StarRatings from 'react-star-ratings';\nimport { _ } from 'src/utilities/helper';\nexport class ReviewCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openDialog = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.closeDialog = () => [this.setState({\n      show: false\n    })];\n\n    this.deleteComment = async () => {\n      await Requests.deleteReview(this.props.item._id);\n      this.props.removeReview();\n    };\n\n    this.getFooter = show => {\n      if (show === true) {\n        console.log(this.props);\n        const replyFormProps = {\n          email: this.props.email,\n          id: this.props.item._id,\n          closeDialog: () => this.closeDialog(),\n          addReply: item => this.addReply(item)\n        };\n        return React.createElement(ReplyForm, Object.assign({}, replyFormProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"button\",\n          className: \"review-footer-text\",\n          onClick: () => this.openDialog(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"reply\"), this.props.email === this.props.item.user ? React.createElement(Button, {\n          className: \"review-footer-text\",\n          onClick: () => this.deleteComment(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"delete\") : '');\n      }\n    };\n\n    this.getReplies = () => {\n      let res = [];\n\n      if (!_.isNil(this.props.item.replies)) {\n        this.props.item.replies.forEach((item, index) => {\n          const datetime = item.date_time.split(\"T\");\n          const date = datetime[0];\n          const time = datetime[1];\n          const dateMessage = date + \" at \" + time;\n          const comment = React.createElement(Card, {\n            style: {\n              width: '100%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(Card.Body, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(Card.Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, item.user ? item.user : \"Anonymous\"), React.createElement(Card.Subtitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, dateMessage), React.createElement(Card.Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, item.reply)));\n          const row = React.createElement(Row, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, comment));\n          res.push(row);\n        });\n        this.setState({\n          replies: res\n        });\n      }\n\n      return res;\n    };\n\n    this.addReply = () => {\n      this.props.addReview();\n      this.getReplies();\n    };\n\n    this.state = {\n      review: \"\",\n      rating: 0,\n      show: false,\n      replies: []\n    };\n  }\n\n  componentDidMount() {\n    this.getReplies();\n  }\n\n  render() {\n    // console.log(this.props);\n    // this.getReplies();\n    const datetime = this.props.item.date_time.split(\"T\");\n    const date = datetime[0];\n    const time = datetime[1];\n    const dateMessage = date + \" at \" + time;\n    return React.createElement(Row, {\n      key: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.props.item.user ? this.props.item.user : \"Anonymous\"), React.createElement(Card.Subtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, dateMessage), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.props.item.review), React.createElement(StarRatings, {\n      rating: this.props.item.rating,\n      starRatedColor: \"rgb(174, 149, 109)\",\n      starDimension: \"25px\",\n      changeRating: this.changeRating,\n      numberOfStars: 5,\n      name: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), this.getFooter(this.state.show), this.state.replies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/elhadinata/Desktop/20t1/COMP3900/submit/capstone-project-artemis/client/src/components/about/ReviewCard.jsx"],"names":["Button","Card","Col","Row","React","ReplyForm","Requests","StarRatings","_","ReviewCard","Component","constructor","props","openDialog","setState","show","closeDialog","deleteComment","deleteReview","item","_id","removeReview","getFooter","console","log","replyFormProps","email","id","addReply","user","getReplies","res","isNil","replies","forEach","index","datetime","date_time","split","date","time","dateMessage","comment","width","reply","row","push","addReview","state","review","rating","componentDidMount","render","changeRating"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Card,\n    Col,\n    Row\n} from 'react-bootstrap';\n\nimport React from 'react';\nimport { ReplyForm } from 'src/components/about/ReplyForm';\nimport { Requests } from 'src/utilities/Requests';\nimport StarRatings from 'react-star-ratings';\nimport { _ } from 'src/utilities/helper';\n\nexport class ReviewCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            review: \"\",\n            rating: 0,\n            show: false,\n            replies: [],\n        };\n    }\n\n    componentDidMount () {\n        this.getReplies();\n\n    }\n\n    openDialog = () => {\n        this.setState({ show:true })\n    }\n\n    closeDialog = () => [\n        this.setState({ show: false })\n    ]\n\n    deleteComment = async () => {\n        await Requests.deleteReview(this.props.item._id);\n        this.props.removeReview();\n    }\n\n    getFooter = (show) => {\n        if (show === true) {\n            console.log(this.props);\n            const replyFormProps = {\n                email: this.props.email,\n                id: this.props.item._id,\n                closeDialog: () => this.closeDialog(),\n                addReply: (item) => this.addReply(item),\n            }\n            return (<ReplyForm {...replyFormProps}/>);\n        } else {\n            return (\n                <span>\n                    <Button type=\"button\" className=\"review-footer-text\" onClick={()=>this.openDialog()}>reply</Button>\n                    {/* to be changed to username */}\n                    { this.props.email === this.props.item.user ? <Button className=\"review-footer-text\" onClick={()=>this.deleteComment()}>delete</Button>:''}\n                </span>\n            );\n        }\n    }\n\n    getReplies = () => {\n        let res = [];\n\n\n\n        if(!_.isNil(this.props.item.replies)) {\n            this.props.item.replies.forEach((item, index) => {\n                const datetime = item.date_time.split(\"T\");\n                const date = datetime[0];\n                const time = datetime[1];\n                const dateMessage = date + \" at \" + time;\n\n                const comment = (\n                    <Card style={{ width: '100%' }}>\n                        <Card.Body>\n                            <Card.Title>{item.user ? item.user : \"Anonymous\"}</Card.Title>\n                            <Card.Subtitle>{dateMessage}</Card.Subtitle>\n                            <Card.Text>{item.reply}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                );\n    \n                const row = (\n                    <Row key={index}>\n                        <Col>\n                            {comment}\n                        </Col>\n                    </Row>\n                );\n                res.push(row);\n            })\n            this.setState({ replies: res});\n                \n        }\n        \n        \n        \n        return res;\n    }\n\n    addReply = () => {\n        this.props.addReview();\n        this.getReplies();\n    }\n\n    render () {\n        // console.log(this.props);\n        // this.getReplies();\n        const datetime = this.props.item.date_time.split(\"T\");\n        const date = datetime[0];\n        const time = datetime[1];\n        const dateMessage = date + \" at \" + time;\n        return (\n            <Row key={this.props.index}>\n                <Col>\n                    <Card style={{ width: '100%' }}>\n                        <Card.Body>\n                            <Card.Title>{this.props.item.user ? this.props.item.user : \"Anonymous\"}</Card.Title>\n                            <Card.Subtitle>{dateMessage}</Card.Subtitle>\n                            <Card.Text>\n                                {this.props.item.review}\n                            </Card.Text>\n                            <StarRatings\n                                rating={this.props.item.rating}\n                                starRatedColor='rgb(174, 149, 109)'\n                                starDimension=\"25px\"\n                                changeRating={this.changeRating}\n                                numberOfStars={5}\n                                name='rating'\n                                />\n                            <br/>\n                            {this.getFooter(this.state.show)}\n                            {this.state.replies}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}